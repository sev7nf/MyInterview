详见：
    http://www.cnblogs.com/linguoguo/p/5106618.html

Cookie:
    Cookie保存在客户端浏览器中
    作用：记录用户访问次数、不可跨域名性（注意：域名不同也不能够操作彼此的Cookie————但是可以通过特殊操作来解决）
    Cookie实际上是一小段的文本信息。客户端请求服务器，如果服务器需要记录该用户状态，就使用response向客 户端浏览器颁发一个Cookie。客户端浏览器
会把Cookie保存起来。当浏览器再请求该网站时，浏览器把请求的网址连同该Cookie一同提交给服务器。服务器检查该Cookie，以此来辨认用户状态。服务器还
可以根据需要修改Cookie的内容。
    注意：Cookie功能需要浏览器的支持

Session：
    注意：Session对象是在客户端第一次请求服务器的时候创建的。
    Session保存在服务器上。客户端浏览器访问服务器的时候，服务器把客户端信息以某种形式记录在服务器上。这就是Session。客户端浏览器再次访问时只
需要从该Session中查找该客户的状态就可以了。
    Session是服务器端使用的一种记录客户端状态的机制，使用上比Cookie简单一些，相应的也增加了服务器的存储压力。
注意：
    同一机器的两个浏览器窗口访问服务器时，会生成两个不同的Session。但是由浏览器窗口内的链接、脚本等打开的新窗口（也就是说不是双击桌面浏览器
图标等打开的窗口）除外。这类子窗口会共享父窗口的Cookie，因此会共享一个Session。
    新开的浏览器窗口会生成新的Session，但子窗口除外。子窗口会共用父窗口的Session。例如，在链接上右击，在弹出的快捷菜单中选择“在新窗口中打开”
时，子窗口便可以访问父窗口的Session。
    
    
问题：如果客户端浏览器将Cookie功能禁用，或者不支持Cookie怎么办？
    URL地址重写。
    URL地址重写的原理是将该用户Session的id信息重写 到URL地址中。服务器能够解析重写后的URL获取Session的id。这样即使客户端不支持Cookie，也可以
使用Session来记录用户状态。
